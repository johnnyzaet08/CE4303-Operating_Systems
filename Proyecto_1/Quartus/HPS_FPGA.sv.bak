`timescale 1 ps / 1 ps
module FPGA_HPS (
		input  wire        clk_clk,            //    clk.clk
		input  wire [3:0]  keys_export,        //   keys.export
		output wire [9:0]  leds_export,        //   leds.export
		output wire [12:0] memory_mem_a,       // memory.mem_a
		output wire [2:0]  memory_mem_ba,      //       .mem_ba
		output wire        memory_mem_ck,      //       .mem_ck
		output wire        memory_mem_ck_n,    //       .mem_ck_n
		output wire        memory_mem_cke,     //       .mem_cke
		output wire        memory_mem_cs_n,    //       .mem_cs_n
		output wire        memory_mem_ras_n,   //       .mem_ras_n
		output wire        memory_mem_cas_n,   //       .mem_cas_n
		output wire        memory_mem_we_n,    //       .mem_we_n
		output wire        memory_mem_reset_n, //       .mem_reset_n
		inout  wire [7:0]  memory_mem_dq,      //       .mem_dq
		inout  wire        memory_mem_dqs,     //       .mem_dqs
		inout  wire        memory_mem_dqs_n,   //       .mem_dqs_n
		output wire        memory_mem_odt,     //       .mem_odt
		output wire        memory_mem_dm,      //       .mem_dm
		input  wire        memory_oct_rzqin,   //       .oct_rzqin
		input  wire        reset_reset_n,      //  reset.reset_n
		output wire [6:0]  seg1_export,        //   seg1.export
		output wire [6:0]  seg2_export,        //   seg2.export
		output wire [6:0]  seg3_export,        //   seg3.export
		output wire [6:0]  seg4_export,        //   seg4.export
		output wire [6:0]  seg5_export,        //   seg5.export
		output wire [6:0]  seg6_export,        //   seg6.export
		input  wire [9:0]  sw_export           //     sw.export
);


	NUEVO_DESIGN u0 (
		.clk_clk            (<connected-to-clk_clk>),            //    clk.clk
		.leds_export        (<connected-to-leds_export>),        //   leds.export
		.memory_mem_a       (<connected-to-memory_mem_a>),       // memory.mem_a
		.memory_mem_ba      (<connected-to-memory_mem_ba>),      //       .mem_ba
		.memory_mem_ck      (<connected-to-memory_mem_ck>),      //       .mem_ck
		.memory_mem_ck_n    (<connected-to-memory_mem_ck_n>),    //       .mem_ck_n
		.memory_mem_cke     (<connected-to-memory_mem_cke>),     //       .mem_cke
		.memory_mem_cs_n    (<connected-to-memory_mem_cs_n>),    //       .mem_cs_n
		.memory_mem_ras_n   (<connected-to-memory_mem_ras_n>),   //       .mem_ras_n
		.memory_mem_cas_n   (<connected-to-memory_mem_cas_n>),   //       .mem_cas_n
		.memory_mem_we_n    (<connected-to-memory_mem_we_n>),    //       .mem_we_n
		.memory_mem_reset_n (<connected-to-memory_mem_reset_n>), //       .mem_reset_n
		.memory_mem_dq      (<connected-to-memory_mem_dq>),      //       .mem_dq
		.memory_mem_dqs     (<connected-to-memory_mem_dqs>),     //       .mem_dqs
		.memory_mem_dqs_n   (<connected-to-memory_mem_dqs_n>),   //       .mem_dqs_n
		.memory_mem_odt     (<connected-to-memory_mem_odt>),     //       .mem_odt
		.memory_mem_dm      (<connected-to-memory_mem_dm>),      //       .mem_dm
		.memory_oct_rzqin   (<connected-to-memory_oct_rzqin>),   //       .oct_rzqin
		.reset_reset_n      (<connected-to-reset_reset_n>),      //  reset.reset_n
		.keys_export        (<connected-to-keys_export>),        //   keys.export
		.seg1_export        (<connected-to-seg1_export>),        //   seg1.export
		.seg2_export        (<connected-to-seg2_export>),        //   seg2.export
		.seg3_export        (<connected-to-seg3_export>),        //   seg3.export
		.seg4_export        (<connected-to-seg4_export>),        //   seg4.export
		.seg5_export        (<connected-to-seg5_export>),        //   seg5.export
		.seg6_export        (<connected-to-seg6_export>),        //   seg6.export
		.sw_export          (<connected-to-sw_export>)           //     sw.export
	);

endmodule